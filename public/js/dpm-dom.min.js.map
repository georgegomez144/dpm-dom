{"version":3,"sources":["dpm-dom.js"],"names":["D_","win","console","reg_isNode","reg_findId","reg_findClass","reg_findAttrs","reg_findDataset","DpmDOM","selector","this","__selector","_typeof","search","createElement","length","prepSelectorArray","split","elements","i","trimmedSelector","trim","querySelectorAll","document","q","push","t","element","id","datasets","newElement","classes","attrs","match","classNames","classList","add","arrAttrs","dataset","prototype","ready","callback","onreadystatechange","readyState","addEventListener","append","appendChild","parentNode","insertBefore","window"],"mappings":"mOAOAA,GAAA,SAAAC,GAGAC,QAAA,IAEAC,EAAA,wBACAC,EAAA,iCACAC,EAAA,sCACAC,EAAA,wEACAC,EAAA,oDAOA,SAAAC,EAAAC,GAMA,OALAC,KAAAC,WAAAF,EAKAG,QAAAF,KAAAC,aAHA,IAAA,SACA,IAAA,EAAAD,KAAAC,WAAAE,OAAAV,GACAO,KAAA,GAAAI,EAAAJ,KAAAC,YACAD,KAAAK,OAAA,MACA,CAGA,IAFA,IAAAC,EAAAN,KAAAC,WAAAM,MAAA,KACAC,EAAA,GACAC,EAAA,EAAAA,EAAAH,EAAAD,OAAAI,IAGA,IAFA,IAAAC,EAAAJ,EAAAG,GAAAE,OACAC,EAAAC,SAAAD,iBAAAF,GACAI,EAAA,EAAAA,EAAAF,EAAAP,OAAAS,IAAAN,EAAAO,KAAAH,EAAAE,IAEA,IAAA,IAAAL,EAAA,EAAAA,EAAAD,EAAAH,OAAAI,IAAAT,KAAAS,GAAAD,EAAAC,GACAT,KAAAK,OAAAG,EAAAH,OACAG,MAAA,IAAA,SACAR,KAAA,GAAAA,KAAAC,WACAD,KAAAK,OAAA,EAEA,OAAAL,KAGA,IAAAgB,OAAAA,EAiCA,SAAAZ,EAAAa,GACA,IAAAC,EAAAC,EAAAC,OAAAA,EAAAC,OAAAA,EAAAC,OAAAA,EAzBA,GA0BAF,EAAAP,SAAAT,cAAAa,EAAAM,MAAA9B,GAAA,KACAyB,EAAAD,EAAAM,MAAA7B,MAAA0B,EAAAF,GAAAA,EAAA,IA3BAG,EAAAJ,EAAAM,MAAA5B,GA8BA,IAMA,IAAA6B,EAAAH,EAAA,GAAAd,MAAA,KANAE,EAAA,EAAAA,EAAAe,EAAAnB,OAAAI,IACAW,EAAAK,UAAAC,IAAAF,EAAAf,IACA,GAAAa,EAAAL,EAAAM,MAAA3B,GAAA,IAAA,IAAAa,EAAA,EAAAA,EAAAa,EAAAjB,OAAAI,IAAA,CAAA,IAAAkB,EAAAL,EAAAb,GAAAE,OAAAJ,MAAA,KACAa,EAAAA,EAAAA,IAAAA,EAAAA,GAIA,OADAD,EAAAF,EAAAM,MAAA1B,MAAAuB,EAAAQ,QAAAT,EAAA,IAAAA,EAAA,IACAC,EAGA,OA/CAtB,EAAA+B,UAAA,CApBAC,MAAA,SAAAC,GAsBA,IAAAf,EAAA,EAAAA,EAAAhB,KAAAK,OAAAW,IACAhB,KAAAC,aAAAY,SAQAA,SAAAmB,mBAAA,WANA,aAAAnB,SAAAoB,YAQAF,KAHA/B,KAAAgB,GAAAkB,iBAAA,OAAAH,IAIAI,OAAA,SAAAlB,GAEA,IADA,iBAAAA,IAAAA,EAAAb,EAAAa,IACAD,EAAA,EAAAA,EAAAhB,KAAAK,OAAAW,IACAhB,KAAAgB,GAAAoB,YAAAnB,GAEA,OAAAjB,MAEAmC,QAAAA,SAAAA,GACA,IAAAnB,EAAA,EAAAA,EAAAhB,KAAAK,OAAAW,IACA,iBAAAC,IAAAA,EAAAb,EAAAa,IACAjB,KAAAgB,GAAAqB,WAAAC,aAAArB,EAAAjB,KAAAgB,IAEA,OAAAhB,OAzDA,SAAAD,GACA,OAAA,IAAAD,EAAAC,IAZA,CA2FAwC","file":"dpm-dom.min.js","sourcesContent":["/* \r\n  DpmDOM (D_)\r\n  Created by: George Gomez\r\n  Contact: george144k.dev@gmail.com\r\n  Date Created: 07/25/2018\r\n*/\r\n\r\nvar D_ = (function (win) {\r\n\r\n  // for internal debugging\r\n  var $log = console;\r\n\r\n  // RegExp\r\n  var reg_hasIdSelector = /\\#[a-z0-9\\-\\_]+$/i;\r\n  var reg_hasClassSelector = /(?:\\s)?\\.[a-z0-9\\-\\_]+$/i;\r\n  var reg_hasNodeSelector = /[a-z0-9\\-\\_]+$/i;\r\n  var reg_isNode = /^\\<([a-z0-9\\-\\_]+)\\s/i;\r\n  var reg_findId = /(?:\\sid\\=\\\"([a-z0-9\\-\\_]+)\\\")/i;\r\n  var reg_findClass = /(?:\\sclass\\=\\\"([a-z0-9\\-\\_\\s]+)\\\")/i;\r\n  var reg_findAttrs = /(?:\\s(?!class)(?!data\\-)(?!id)([a-z0-9\\-]+)\\=\\\"([a-z0-9\\-\\_\\s]+)\\\")/gi;\r\n  var reg_findDataset = /(?:\\sdata\\-([a-z0-9\\-]+)\\=\\\"([a-z0-9\\-\\_\\s]+)\\\")/i;\r\n\r\n  var __dom = function (selector) {\r\n    return new DpmDOM(selector);\r\n  };\r\n\r\n  /* Public API */\r\n  function DpmDOM(selector) {\r\n    this.__selector = selector;\r\n    switch (typeof this.__selector) {\r\n      case 'string':\r\n        if (this.__selector.search(reg_isNode) > -1) {\r\n          this[0] = createElement(this.__selector);\r\n          this.length = 1;\r\n        } else {\r\n          const prepSelectorArray = this.__selector.split(',');\r\n          let elements = [];\r\n          for (let i = 0; i < prepSelectorArray.length; i++) {\r\n            const trimmedSelector = prepSelectorArray[i].trim();\r\n            const querySelectorAll = document.querySelectorAll(trimmedSelector);\r\n            for (let q = 0; q < querySelectorAll.length; q++) elements.push(querySelectorAll[q]);\r\n          }\r\n          for (let i = 0; i < elements.length; i++) this[i] = elements[i];\r\n          this.length = elements.length;\r\n        }\r\n        break;\r\n      case 'object':\r\n        this[0] = this.__selector;\r\n        this.length = 1;\r\n        break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  let t;\r\n\r\n  DpmDOM.prototype = {\r\n    ready: function (callback) {\r\n      for (t = 0; t < this.length; t++) {\r\n        if (this.__selector === document) {\r\n          document.onreadystatechange = function () {\r\n            if (document.readyState === 'complete') {\r\n              callback();\r\n            }\r\n          };\r\n        } else {\r\n          this[t].addEventListener('load', callback);\r\n        }\r\n      }\r\n    },\r\n    append: function(element) {\r\n      if(typeof element === 'string') element = createElement(element);\r\n      for(t = 0; t < this.length; t++) {\r\n        this[t].appendChild(element);\r\n      }\r\n      return this;\r\n    },\r\n    prepend: function(element) {\r\n      for(t=0;t<this.length;t++) {\r\n        if(typeof element === 'string') element = createElement(element);\r\n        this[t].parentNode.insertBefore(element, this[t]);\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n\r\n  /* Internal Functions */\r\n  function createElement(element) {\r\n    let newElement, id, classes, attrs, datasets;\r\n    newElement = document.createElement( element.match(reg_isNode)[1] );\r\n    if(id = element.match(reg_findId)) newElement.id = id[1];\r\n    if(classes = element.match(reg_findClass)) {\r\n      let classNames = classes[1].split(' ');\r\n      for(let i = 0; i < classNames.length; i++) {\r\n        newElement.classList.add(classNames[i]);\r\n      }\r\n    }\r\n    if(attrs = element.match(reg_findAttrs)) {\r\n      for(let i = 0; i < attrs.length; i++) {\r\n        const arrAttrs = attrs[i].trim().split('=');\r\n        newElement[arrAttrs[0]] = arrAttrs[1];\r\n      }\r\n    }\r\n    if(datasets = element.match(reg_findDataset)) newElement.dataset[datasets[1]] = datasets[2];\r\n    return newElement;\r\n  }\r\n\r\n  return (__dom);\r\n\r\n})(window || this);"]}